#!/bin/bash

SRCE=${BASH_SOURCE[0]}
while [ -L "$SRCE" ]; do
	TARGET=$(readlink "$SRCE")
	if [[ $TARGET == /* ]]; then
		SRCE=$TARGET
	else
		DIR=$(dirname "$SRCE")
		SRCE=$DIR/$TARGET
	fi
done
RDIR=$(dirname "$SRCE")
DIR=$(cd -P "$(dirname "$SRCE")" >/dev/null 2>&1 && pwd)
DIRUSER=$(cd -P "$(dirname "$SRCE")" >/dev/null 2>&1 && cd && pwd)
USER=$(whoami)
HOST_NAME=$(cat /etc/hostname)

apptitle="Arch Linux Installation"
cachedir=$DIRUSER/.cache/arch-de-install
workdir=$DIR

# diakog colors
cat <<EOF >dialog.archfi
use_shadow = OFF
title_color = (BLACK,WHITE,OFF)
button_label_active_color = (WHITE,BLUE,ON)
button_label_inactive_color = (BLACK,WHITE,OFF)
tag_color = (BLACK,WHITE,OFF)
tag_selected_color = (WHITE,BLUE,ON)
tag_key_color = (BLACK,WHITE,OFF)
tag_key_selected_color = (WHITE,BLUE,ON)
check_color = tag_color
check_selected_color = tag_selected_color
EOF
export DIALOGRC="dialog.archfi"

# scripts
# $1 : path
# $2 : chmod
require() {
	if [ ! -f "$cachedir/$1" ]; then
		path=$(dirname $1)
		mkdir -p $cachedir/$path 2>/dev/null
		cd $cachedir/$path
		cp -r $DIR/$1 . 2>/dev/null
	fi
	chmod $2 $cachedir/$1
	cd $cachedir
}

# $1 path
menu() {
	require $1 755
	$cachedir/$1
	if [ $? = 0 ]; then
		menu $1
	fi
}

# $1: path
script() {
	require $1 755
	$cachedir/$1
}
sscript() {
	require $1 755
	sudo $cachedir/$1
}
srscript() {
	require $1 755
  sudo -i
	$cachedir/$1
}

# $1 : message
# $2 : args
confirm() {
	dialog --backtitle "$apptitle" $2 --yesno "$1" 0 0
}
message() {
	dialog --backtitle "$apptitle" $2 --msgbox "$1" 0 0
}

pressanykey() {
	read -n1 -p "Press any key to continue."
}

# $1 : servicename
# $2 : [displayname]
svcenable() {
	if [ "$2" = "" ]; then
		displayname="$1"
	else
		displayname="$2 ($1)"
	fi
	if (confirm "Start $displayname service at boot ?\n\nsystemctl enable $1"); then
		clear
		echo "sudo systemctl enable $1"
		sudo systemctl enable $1
		pressanykey
	fi
}

# $1: pacman packages
# $2: aur packages
instpkg() {
	if [ ! "$1" = "" ]; then
		clear
		echo "# sudo pacman -S --needed $1"
		sudo pacman -S --needed $1
		pressanykey
	fi
	if [ ! "$2" = "" ]; then
		if [ -f /usr/bin/yay ]; then
			clear
			echo "# sudo -u $USER yay -S --needed $2"
			sudo -u $USER yay -S --needed $2
			pressanykey
		else
			if [ -f /usr/bin/paru ]; then
				clear
				echo "# sudo -u $USER paru -S --needed $2"
				sudo -u $USER paru -S --needed $2
				pressanykey
			else
				echo "To install AUR packages, you need to install an aurhelper in Aur Helper menu !"
			fi
		fi
	fi
}

# $1: string
# $2: [title]
choosepkg() {
	if [ "$2" = "" ]; then
		title=$1
	else
		title=$2
	fi
	options=()
	items=$(pacman -Ssq $1)
	for item in $items; do
		options+=("$item" "" off)
	done
	sel=$(dialog --backtitle "$apptitle" --title "$title" --cancel-button "Back" --checklist "" 0 0 0 \
		"${options[@]}" \
		3>&1 1>&2 2>&3)
	if [ ! "$?" = "0" ]; then
		return 1
	fi
	for itm in $sel; do
		pkg="$pkg $(echo $itm | sed 's/"//g')"
	done
	instpkg "$pkg" "$aurpkg"
	return 0
}

# $1: string
# $2: [title]
chooseaurpkg() {
	if [ "$2" = "" ]; then
		title=$1
	else
		title=$2
	fi
	options=()
	if [ -f /usr/bin/yay ]; then
		items=$(yay -Ssq $1)
	else
		if [ -f /usr/bin/paru ]; then
			items=$(paru -Ssq $1)
		fi
	fi
	for item in $items; do
		options+=("$item" "" off)
	done
	sel=$(dialog --backtitle "$apptitle" --title "$title" --cancel-button "Back" --checklist "" 0 0 0 \
		"${options[@]}" \
		3>&1 1>&2 2>&3)
	if [ ! "$?" = "0" ]; then
		return 1
	fi
	for itm in $sel; do
		aurpkg="$aurpkg $(echo $itm | sed 's/"//g')"
	done
	instpkg "$pkg" "$aurpkg"
	return 0
}

while (("$#")); do
	case $1 in
	--root)
		menu menu
		exit 0
		;;
	--chroot)
		require menu 755
		sed -i "/options+=(\"Shutdown\" \"\")/d" menu
		menu menu
		exit 0
		;;
	esac
	shift
done
